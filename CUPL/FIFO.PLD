Name     FIFO ;
PartNo   00 ;
Date     16-04-2009 ;
Revision 01 ;
Designer Engineer ;
Company  ccisel ;
Assembly None ;
Location  ;
Device   v750c;
/* ************************ INPUT PINS *************************** */
PIN 1 = CLK;
PIN [2,3] = [K_VAL,ACK]; 

PIN [6..9] = [IN0..IN3];

/* ************************ OUTPUT PINS ************************** */

PIN [15..17] = [A0..A2];	 /* Saida Addresses RAM */

PIN [19..22] = [K0..K3]; 	 /* Saida K0 a K3 para a RAM */
PIN 14 = RNW;			 /* Read & !Write - se 1 Read. se 0 Write */
PIN 23 = REG; 		 /* Clock do registo de saida (EDO) */

/*PIN 23 = K_RDY;		    K_RDY para o controlo central */

/* INTERMEDIOS */
pinnode [32..34] = [W0..W2];
pinnode [29,39,35] = [Q0..Q2];
pinnode [26,27,28] = [R0..R2];
pinnode 30 = P0;
pinnode 31 = WR;

/* **************************** BODY ***************************** */
ZERO='b'0;
UM='b'1;

/* ************************* FULL/EMPTY ****************************/
WR.d = !RADDR;
WR.ar = ZERO;
WR.sp = ZERO;
WR.ckmux = WCLK;

EQ = !(W0$R0)&!(W1$R1)&!(W2$R2); 
FULL = EQ & !WR;
EMPTY = EQ & WR;
/* ************************* TRI STATES ****************************/
[K0..3].d	=	[IN0..3];
[K0..3].oe	=	RNW;
[K0..3].sp	=	ZERO;
[K0..3].ckmux	=	CLK;

/* ********************** CONTADOR WRITE ***************************/
[W0..2].T	=	[W0..2];
[W0..2].ar	=	ZERO;
[W0..2].sp	=	ZERO;
W0.ck = !RNW;
W1.ck = !RNW;
W2.ck = !RNW;

/* ************************* CONTADOR READ ************************** */
[R0..2].T	=	[R0..2];
[R0..2].ar	=	ZERO;
[R0..2].sp	=	ZERO;
R0.ck = BG;
R1.ck = BG;
R2.ck = BG;

/* ********************** MUX ENDERECOS RAM ************************* */
A0 = (R0 & RADDR) # (W0 & !RADDR);
A1 = (R1 & RADDR) # (W1 & !RADDR);
A2 = (R2 & RADDR) # (W2 & !RADDR);

/* ***************** PARTE DA MAQUINA DE ESTADOS ******************** */
WCLK=UM;

[Q0..2].ar=ZERO;
[Q0..2].sp=ZERO;
[Q0..2].CKMUX=CLK;

SEQUENCED [Q0, Q1, Q2]{
PRESENT 0
	out RNW, RADDR;
	if  K_VAL & (!FULL)  next 1;
	if !K_VAL &  BR & (!EMPTY) next 2;
	default next 0;

PRESENT 1
	out RNW;
	default next 3;

PRESENT 3
	out WCLK;
	default next 7;

PRESENT 7
	out RNW,RADDR;
	default next 0;

PRESENT 2
	out RNW,REG,RADDR,WCLK;
	default next 6;

PRESENT 6
	out RNW,BG,RADDR;
	default next 0;
}

[P0].ar=ZERO;
[P0].sp=ZERO;
[P0].CKMUX=!CLK;


SEQUENCED [P0]{
PRESENT 0
	out BR;
	if BG next 1;
	default next 0;

PRESENT 1
	out K_RDY;
	if ACK next 0;
	default next 1;
}
