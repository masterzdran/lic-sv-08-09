Name     FIFO ;
PartNo   00 ;
Date     16-04-2009 ;
Revision 01 ;
Designer Engineer ;
Company  ccisel ;
Assembly None ;
Location  ;
Device   v750c;


/* ************************ INPUT PINS *************************** */
PIN 1 = CLK;
PIN 2 = K_VAL;
PIN 3 = ACK;
PIN [6..9] = [IN0..IN3];

/* ************************ OUTPUT PINS ************************** */

PIN [14..17] = [K3..K0];	 /* Saida K0 a K3 para a RAM */
PIN [18..20] = [A0..A2]; 	 /* Saida Addresses RAM */
PIN 21 = RNW;			 /* Read & !Write - se 1 Read. se 0 Write */
PIN 22 = REG; 		 /* Clock do registo de saida (EDO) */
PIN 23 = K_RDY;		 /* K_RDY para o controlo central */

/* INTERMEDIOS */
pinnode 26 = WR;
pinnode [27..29] = [W0..W2];
pinnode [30..32] = [R0..R2];
pinnode [33..35] = [Q0..Q2];
pinnode 36 = P0;



/* **************************** BODY ***************************** */

/* ************************* FULL/EMPTY ****************************/
WR.d = WRITE;
WR.ar = 'b'0;
WR.sp = 'b'0;
WR.ck = (BG # WRITE);

/*FULL=!(W0$R0)&!(W1$R1)&!(W2$R2) & WR*/
/*EMPTY=!(W0$R0)&!(W1$R1)&!(W2$R2) & !WR*/
/* ************************* TRI STATES ****************************/
K0.d = IN0;
K0.oe = RNW;
K0.sp = 'b'0;
K0.ck = CLK; 

K1.d = IN1;
K1.oe = RNW;
K1.sp = 'b'0;
K1.ck = CLK; 

K2.d = IN2;
K2.oe = RNW;
K2.sp = 'b'0;
K2.ck = CLK; 

K3.d = IN3;
K3.oe = RNW;
K3.sp = 'b'0;
K3.ck = CLK; 

/* ********************** CONTADOR WRITE ***************************/
W0.d = 'b'1$W0;
W0.ar = 'b'0;
W0.sp = 'b'0;
W0.ck = WRITE & RADDR;

W1.d = 'b'1$W1;
W1.ar = 'b'0;
W1.sp = 'b'0;
W1.ck = !W0;

W2.d = 'b'1$W1;
W2.ar = 'b'0;
W2.sp = 'b'0;
W2.ck = !W1;
/* ************************* CONTADOR READ ************************** */
R0.d = 'b'1$R0;
R0.ar = 'b'0;
R0.sp = 'b'0;
R0.ck = BG;

R1.d = 'b'1$R1;
R1.ar = 'b'0;
R1.sp = 'b'0;
R1.ck = !R0;

R2.d = 'b'1$R2;
R2.ar = 'b'0;
R2.sp = 'b'0;
R2.ck = !R1;
/* ********************** MUX ENDERECOS RAM ************************* */
A0 = R0 & RADDR # W0 & !RADDR;
A1 = R1 & RADDR # W1 & !RADDR;
A2 = R2 & RADDR # W2 & !RADDR;

/* ***************** PARTE DA MAQUINA DE ESTADOS ******************** */

[Q0..2].ar='b'0;
[Q0..2].sp='b'0;
[Q0..2].CKMUX=CLK;

SEQUENCED [Q0, Q1, Q2]{
PRESENT 0
	out RNW, RADDR;
	if K_VAL&!(!(W0$R0)&!(W1$R1)&!(W2$R2) & WR) next 1;
	if !K_VAL&BR&!(!(W0$R0)&!(W1$R1)&!(W2$R2) & !WR) next 2;
	default next 0;

PRESENT 1
	out RNW;
	default next 3;

PRESENT 3
	out WRITE;
	default next 7;

PRESENT 7
	out RNW,RADDR,WRITE;
	default next 0;

PRESENT 2
	out RNW,REG;
	default next 6;

PRESENT 6
	out RNW,BG;
	default next 0;
}

[P0].ar='b'0;
[P0].sp='b'0;
[P0].CKMUX=!CLK;


SEQUENCED [P0]{
PRESENT 0
	out BR;
	if BG next 1;
	default next 0;

PRESENT 1
	out K_RDY;
	if ACK next 0;
	default next 1;
}
